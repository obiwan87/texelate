{
  parserClass="com.lasagnerd.texelate.ifblocks.PreprocessorParser"
  parserUtilClass="com.lasagnerd.texelate.ifblocks.PreprocessorParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Preprocessor"
  psiImplClassSuffix="Impl"
  psiPackage="com.lasagnerd.texelate.preprocessor.lang.psi"
  psiImplPackage="com.lasagnerd.texelate.preprocessor.lang.psi.impl"

  elementTypeHolderClass="com.lasagnerd.texelate.ifblocks.psi.PreprocessorTypes"
  elementTypeClass="com.lasagnerd.texelate.ifblocks.psi.PreprocessorElementType"
  tokenTypeClass="com.lasagnerd.texelate.ifblocks.psi.PreprocessorTokenType"

  tokens=[
    WHITE_SPACE='regexp:\s+'
    XML_OPENING_IF='regexp:<!--\?if[^\r\n]*-->'
    XML_CLOSING_IF='regexp:<!--\?endif[^\r\n]*-->'
    HASHTAG_OPENING_IF='regexp:#\?if[^\n\r]*'
    HASHTAG_CLOSING_IF='regexp:#\?endif[^\n\r]*'
    SEMICOLON_OPENING_IF='regexp:;\?if[^\n\r]*'
    SEMICOLON_CLOSING_IF='regexp:;\?endif[^\n\r]*'
    ANY = 'regexp:.+'
  ]

  extends(".*if_block") = if_block
}

preprocessorFile ::= item*
private item ::= text_block | if_block
if_block ::=  xml_if_block |
              hashtag_if_block |
              semicolon_if_block

semicolon_if_block ::= SEMICOLON_OPENING_IF item* SEMICOLON_CLOSING_IF
hashtag_if_block ::= HASHTAG_OPENING_IF item* HASHTAG_CLOSING_IF
xml_if_block ::= XML_OPENING_IF item* XML_CLOSING_IF

text_block ::= (WHITE_SPACE | ANY)+

